#pragma checksum "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "22b6caf4b86daa3b83dd380f540b9f9bbf37e942"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Ogani.WebUI.Views.Account.Areas_Admin_Views_Account_AccessDenied), @"mvc.1.0.view", @"/Areas/Admin/Views/Account/AccessDenied.cshtml")]
namespace Ogani.WebUI.Views.Account
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\_ViewImports.cshtml"
using Ogani.WebUI.Models.Entity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\_ViewImports.cshtml"
using Ogani.WebUI.Models.Entity.Membership;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\_ViewImports.cshtml"
using Ogani.WebUI.Models.ViewModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\_ViewImports.cshtml"
using Ogani.WebUI.Areas.Admin.Models.ViewModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\_ViewImports.cshtml"
using Ogani.WebUI.AppCode.Types;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\_ViewImports.cshtml"
using Ogani.WebUI.Models.DataContext;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\_ViewImports.cshtml"
using Ogani.WebUI.AppCode.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\_ViewImports.cshtml"
using Resource;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"22b6caf4b86daa3b83dd380f540b9f9bbf37e942", @"/Areas/Admin/Views/Account/AccessDenied.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b1f36008a3b12ac277cca4fee114ea73c73c21c5", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_Account_AccessDenied : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Admin/assets/plugins/jquery/jquery-1.11.3.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery-cookie/jquery.cookie.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml"
  
    ViewBag.Title = "Acount AccessDenied";
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<link rel=\"shortcut icon\" href=\"#\">\r\n<style>\r\n    ");
            WriteLiteral(@"@import url('https://fonts.googleapis.com/css?family=Open+Sans|Nova+Mono');

    :root {
        --font-header: 'Nova Mono', monospace;
        --font-text: 'Open Sans', sans-serif;
        --color-theme: #F1EEDB;
        --color-bg: #282B24;
/*        --animation-sentence: 'SupposedToLeave';*/
        --animation-duration: 20s;
");
#nullable restore
#line 18 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml"
          
            int duration = 20;
        

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        width: 100%;
        font-family: var(--font-text);
        color: var(--color-theme);
        background: var(--color-bg);
        overflow: hidden;
    }

    .container {
        text-align: center;
        margin: 1rem 0.5rem 0;
    }

        .container h1 {
            font-family: var(--font-header);
            font-size: calc(4rem + 2vw);
            text-transform: uppercase;
        }

        .container p {
            text-transform: uppercase;
            letter-spacing: 0.2rem;
            font-size: 2rem;
            margin: 1.5rem 0 3rem;
        }

    svg.keyhole {
        height: 82px;
        width: 82px;
        opacity: 0;
        visibility: hidden;
        /* define an animation for the keyhole, to introduce it
      paused by default, run with a timeout in JavaScript
      */
        animation: showKey 0.5s 0.5s paused ease-out forw");
            WriteLiteral(@"ards;
    }

    svg.key {
        height: 164px;
        width: 164px;
        position: absolute;
        opacity: 0;
        visibility: hidden;
        /* define an animation for the keyhole, to introduce it
      paused by default, run with a timeout in JavaScript
      */
        animation: showKey 0.5s 0.5s paused ease-out forwards;
    }

    .ghost {
        /* border: 1px solid tomato; */
        position: absolute;
        bottom: 5px;
        left: calc(50% - 100px);
        width: 200px;
        height: 200px;
        /* have the ghost move to the right and to the left of the screen, turning to its central position and repeating the animation twice */
        animation: hoverGhost calc(var(--animation-duration)/2) ease-in-out 2;
    }
        /* introduce text through a pseudo element, connected to the animated div */
        .ghost:before {
            content: attr(data-before);
            color: var(--color-theme);
            border-radius: 50%;
            posi");
            WriteLiteral(@"tion: absolute;
            bottom: 100%;
            text-align: center;
            line-height: 2;
            padding: 1rem;
            visibility: hidden;
            opacity: 0;
            /* have each string of text introduced as the ghost returns from the right edge of the screen, and for the length of time it takes to cover the central portion (a fourth, which becomes an eight as the animation length is half the total duration) */
            /* the delay for an hypothetical duration of 40s is 7.5s for the first, 27.5s for the second and finally 40s for the last
      in fractions and with a bit of math it boils down to 3/16, 27/40 and 1
      // ! remember to include a slight delay in the animation of the key and keyhole
      */
            animation: showText calc(var(--animation-duration)/8) calc(var(--animation-duration)*3/16) ease-out forwards, showNewText calc(var(--animation-duration)/8) calc(var(--animation-duration)*27/40) ease-out forwards, showFinalText calc(var(--animation-");
            WriteLiteral(@"duration)/8) var(--animation-duration) ease-out forwards;
        }

    /* define the keyframe animations
    - hoverghost to have the ghost move right, left and then back to its default position
    - showKey to introduce into view the key (and keyhole) svg
    - showText, showNewText, showFinalText to show the different strings (the implementation is quite quirky and primed for optimization)
     */
    ");
            WriteLiteral("@keyframes hoverGhost {\r\n        25% {\r\n            transform: translateX(20vw);\r\n        }\r\n\r\n        75% {\r\n            transform: translateX(-20vw);\r\n        }\r\n    }\r\n\r\n    ");
            WriteLiteral(@"@keyframes showKey {
        to {
            opacity: 1;
            visibility: visible;
        }
    }


    /* alter the text changing the value of the custom property, weary of changing its value when the pseudo element is hidden and changing its value in the last keyframe (as the animation gives this value as per the ""forwards"" value of the fill-mode property)  */
    ");
            WriteLiteral(@"@keyframes showText {
        2% {
            opacity: 1;
            visibility: visible;
        }

        98% {
            opacity: 1;
            visibility: visible;
        }

        99% {
            opacity: 0;
            visibility: hidden;
        }

        100% {
/*            --animation-sentence: 'Model.ToDo';*/
        }
    }

    ");
            WriteLiteral(@"@keyframes showNewText {
        2% {
/*            --animation-sentence: 'Model.ToDo';*/
            opacity: 1;
            visibility: visible;
        }

        98% {
            opacity: 1;
            visibility: visible;
        }

        99% {
/*            --animation-sentence: 'Model.ToDo';*/
            opacity: 0;
            visibility: hidden;
        }

        100% {
/*            --animation-sentence: 'Model.KeyForYou';*/
        }
    }

    ");
            WriteLiteral(@"@keyframes showFinalText {
        2% {
            opacity: 1;
            visibility: visible;
        }

        98% {
            opacity: 1;
            visibility: visible;
        }

        100% {
            opacity: 0;
            visibility: hidden;
        }
    }
</style>

<style>
    .lang-list {
        position: fixed;
        top: 50px;
        right: 50px;
        display: none;
    }

        .lang-list.active {
            display: inline-block;
        }

        .lang-list ul {
            list-style: none;
            margin: 0;
            padding: 0;
        }

            .lang-list ul li a.lang {
                display: none;
                padding: 5px;
                border: 1px solid #8080807a;
                border-radius: 5px;
                color: #7a7f8c;
                cursor: pointer;
                transition: all 0.3s;
            }

                .lang-list ul li a.lang:hover {
                    background-color: ");
            WriteLiteral(@"rgba(0,0,0,0.15);
                    color: #626262;
                    box-shadow: 0 0 4px 0px rgb(0 0 0 / 66%);
                }

                .lang-list ul li a.lang.lang-now,
                .lang-list ul li a.lang.show {
                    display: block;
                }

                .lang-list ul li a.lang.active {
                    display: none !important;
                }

    .d-none {
        display: none !important;
    }
</style>

<span id=""supposed_to_leave"" class=""d-none"">");
#nullable restore
#line 242 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml"
                                       Write(AccountResource.SupposedToLeave);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n<span id=\"yay\" class=\"d-none\">");
#nullable restore
#line 243 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml"
                         Write(AccountResource.Yay);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n<span id=\"access_granted\" class=\"d-none\">");
#nullable restore
#line 244 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml"
                                    Write(AccountResource.AccessGranted);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n<span id=\"to_do\" class=\"d-none\">");
#nullable restore
#line 245 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml"
                           Write(AccountResource.ToDo);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n<span id=\"key_for_you\" class=\"d-none\">");
#nullable restore
#line 246 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml"
                                 Write(AccountResource.KeyForYou);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span>

<!-- include the svg assets later used in the project -->
<svg style=""display: none"">
    <symbol id=""keyhole""
            xmlns=""http://www.w3.org/2000/svg""
            width=""100""
            height=""100""
            viewBox=""0 0 26.458333 26.458334"">
        <g transform=""translate(0 -270.542)"">
            <circle cx=""13.229""
                    cy=""279.141""
                    r=""8.599""
                    fill=""#f1eedb""
                    paint-order=""stroke fill markers"" />
            <path d=""M10.516 283.271h5.427c1.164 0 1.768.861 2.102 1.802l3.59 10.125c.334.94-.937 1.802-2.102 1.802H6.926c-1.165 0-2.437-.861-2.103-1.802l3.59-10.125c.334-.94.938-1.802 2.103-1.802z""
                  fill=""#f1eedb""
                  paint-order=""stroke fill markers"" />
            <circle r=""6.06""
                    cy=""279.141""
                    cx=""13.229""
                    fill=""#282b24""
                    paint-order=""stroke fill markers"" />
            <path d=""M11.502 283");
            WriteLiteral(@".76h3.455c.741 0 1.126.733 1.338 1.534l2.286 8.614c.213.8-.597 1.534-1.338 1.534H9.216c-.742 0-1.551-.733-1.339-1.534l2.286-8.614c.212-.8.597-1.534 1.339-1.534z""
                  fill=""#282b24""
                  paint-order=""stroke fill markers"" />
        </g>
    </symbol>
    <symbol id=""key""
            xmlns=""http://www.w3.org/2000/svg""
            width=""100""
            height=""100""
            viewBox=""0 0 26.458333 26.458334"">
        <circle cx=""13.229""
                cy=""279.141""
                r=""8.599""
                paint-order=""stroke fill markers""
                transform=""matrix(0 -.76923 .7499 0 -202.882 23.405)""
                fill=""#f1eedb"" />
        <circle r=""8.599""
                cy=""279.141""
                cx=""13.229""
                paint-order=""stroke fill markers""
                transform=""matrix(0 -.5887 .57392 0 -153.756 21.017)""
                fill=""#282b24"" />
        <path fill=""#f1eedb""
              paint-order=""stroke fill markers""
        ");
            WriteLiteral(@"      d=""M12.03 12.13h14.428v2.2H12.03z"" />
        <path fill=""#f1eedb""
              paint-order=""stroke fill markers""
              d=""M18.147 12.13h2.895v6.772h-2.895zM22.113 12.13h2.716v5.065h-2.716z"" />
    </symbol>
    <symbol id=""ghost""
            xmlns=""http://www.w3.org/2000/svg""
            width=""100""
            height=""100""
            viewBox=""0 0 26.458333 26.458334"">
        <g transform=""translate(0 -270.542)"">
            <path d=""M4.63 279.293c0-4.833 3.85-8.751 8.6-8.751 4.748 0 8.598 3.918 8.598 8.75H13.23zM4.725 279.293h16.914c.052 0 .19.043.19.096l-.095 14.329c0 .026-.011.05-.028.068a.093.093 0 0 1-.067.028c-.881 0-1.235-1.68-2.114-1.616-.995.072-1.12 2.082-2.114 2.154-.88.064-1.233-1.615-2.115-1.615-.881 0-1.233 1.615-2.114 1.615-.881 0-1.233-1.615-2.114-1.615-.882 0-1.236 1.679-2.115 1.615-.994-.072-1.12-2.082-2.114-2.154-.88-.063-1.41 1.077-2.114 1.616-.021.016-.05-.01-.067-.028a.097.097 0 0 1-.028-.068v-14.33c0-.052.042-.095.095-.095z""
                  fill=""#f1eedb""");
            WriteLiteral(@"
                  paint-order=""stroke fill markers"" />
            <path d=""M15.453 281.27a1.987 1.94 0 0 1-.994 1.68 1.987 1.94 0 0 1-1.987 0 1.987 1.94 0 0 1-.994-1.68h1.988z""
                  fill=""#282b24""
                  paint-order=""stroke fill markers"" />
            <g fill=""#282b24"" transform=""matrix(1 0 0 1.0177 .283 -5.653)"">
                <ellipse cx=""10.205""
                         cy=""278.668""
                         rx=""1.231""
                         ry=""1.181""
                         paint-order=""stroke fill markers"" />
                <ellipse ry=""1.181""
                         rx=""1.231""
                         cy=""278.668""
                         cx=""16.159""
                         paint-order=""stroke fill markers"" />
                <ellipse ry="".331""
                         rx="".853""
                         cy=""280.936""
                         cx=""10.205""
                         opacity="".5""
                         paint-order=""stroke fill markers"" ");
            WriteLiteral(@"/>
                <ellipse cx=""16.159""
                         cy=""280.936""
                         rx="".853""
                         ry="".331""
                         opacity="".5""
                         paint-order=""stroke fill markers"" />
            </g>
            <ellipse ry="".614""
                     rx=""8.082""
                     cy=""296.386""
                     cx=""13.229""
                     opacity="".1""
                     fill=""#f1eedb""
                     paint-order=""stroke fill markers"" />
        </g>
    </symbol>
</svg>
<div class=""lang-list"">
    <ul>
        <li>
            <a class=""lang lang-now""></a>
        </li>
        <li>
            <a class=""lang"" data-lang=""az"">AZ</a>
        </li>
        <li>
            <a class=""lang"" data-lang=""en"">EN</a>
        </li>
        <li>
            <a class=""lang"" data-lang=""ru"">RU</a>
        </li>
    </ul>
</div>
<!-- include in a container a heading, paragraph and svg for the keyhole -->
<div ");
            WriteLiteral("class=\"container\">\r\n    <h1>403</h1>\r\n    <p>");
#nullable restore
#line 363 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml"
  Write(AccountResource.AccessNotGranted);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</p>
    <svg class=""keyhole"">
        <use href=""#keyhole"" />
    </svg>
</div>

<!-- outside of the container, to have them absolute positioned in relation to the body, include an svg for the key and one for the ghost -->
<svg class=""key"">
    <use href=""#key"" />
</svg>

<!--
  ! nest the svg in a vi, give the svg and vi the same class
  the div and svg behave differently when translating the element through the transform property, giving a nice distance between the text (included with a pseudo element on the div) and the svg
-->
<div class=""ghost"">
    <svg class=""ghost"">
        <use href=""#ghost"" />
    </svg>
</div>


");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "22b6caf4b86daa3b83dd380f540b9f9bbf37e94221555", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "22b6caf4b86daa3b83dd380f540b9f9bbf37e94222678", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script>\r\n\r\n    let dur = ");
#nullable restore
#line 389 "D:\code\Lessons\OganiProjectOnWindows\Ogani\Ogani.WebUI\Areas\Admin\Views\Account\AccessDenied.cshtml"
         Write(duration);

#line default
#line hidden
#nullable disable
            WriteLiteral(@" * 1000;

    $('div.ghost').attr('data-before', $('#supposed_to_leave').text());

    setTimeout(() => {
        $('div.ghost').attr('data-before', $('#to_do').text());
    }, dur * 11 / 30);

    setTimeout(() => {
        $('div.ghost').attr('data-before', $('#key_for_you').text());
    }, dur * 26 / 30);

    // target the elements in the DOM used in the project

    /**
     * svg for the key and keyhole
     * div nesting the ghost
     * heading and paragraph
     */
    const key = document.querySelector("".key"");
    const keyhole = document.querySelector("".keyhole"");
    const ghost = document.querySelector("".ghost"");

    const heading = document.querySelector(""h1"");
    const paragraph = document.querySelector(""p"");


    // for the length of the timout, consider the --animation-duration custom property and add a small delay
    // retrieve properties on the root element

    const root = document.querySelector("":root"");
    const rootStyles = getComputedStyle(root);");
            WriteLiteral(@"
    // retrieve the animation-duration custom property
    // ! this is specified as ""40s"", in seconds, so parse the number and includ it in milliseconds

    const animationDuration = parseInt(rootStyles.getPropertyValue(""--animation-duration"")) * 1000;
    let keyTimer = animationDuration * 9 / 8;


    // retrieve the dimensions of the key (to have the key exactly where the cursor would lie)
    const keyBox = key.getBoundingClientRect();
    // console.log(keyBox);


    // KEY & KEYHOLE ANIMATION
    // include a timeout with the specified time frame
    const timeoutID = setTimeout(() => {
        // after the specified time, change the cursor as to seemingly grab the key
        key.parentElement.parentElement.style.cursor = ""grab"";

        // introduce the key and keyhole svg elements by triggering the paused-by-default animation
        key.style.animationPlayState = ""running"";
        keyhole.style.animationPlayState = ""running"";

        // ! pointer-events set to none on th");
            WriteLiteral(@"e key to allow for a mouseover event on the keyhole
        // the key is indeed used in stead of the normal cursor and would overlap on top of everything
        key.style.pointerEvents = ""none"";

        // when the cursor hovers anywhere in the window, call a function to update the position of the key and have it match the cursor
        window.addEventListener(""mousemove"", updateKeyPosition);

        // when the cursor hovers on the keyhole, call a function to grant access and remove present listeners
        keyhole.addEventListener(""mouseover"", grantAccess);

        clearTimeout(timeoutID);
    }, keyTimer);


    // define the function which updates the position of the absolute-positioned key according to the mouse coordinates (and the keys own dimensions)

    const updateKeyPosition = (e) => {
        let x = e.clientX;
        let y = e.clientY;
        key.style.left = x - keyBox.width / 1.5;
        key.style.top = y - keyBox.height / 2;
    };

    // define the function ");
            WriteLiteral(@"which notifies the user of the grant access
    const grantAccess = () => {
        // restore the cursor

        key.parentElement.parentElement.style.cursor = ""default"";

        // change the text of the heading and paragraph elements

        heading.textContent = `🎉 ${$('#yay').text()} 🎉`;
        paragraph.textContent = `${$('#access_granted').text()}`;

        // remove the svg elements for the key and keywhole from the flow of the document

        keyhole.style.display = ""none"";
        key.style.display = ""none"";

        // remove the event listeners, most notably the one on the window

        window.removeEventListener(""mousemove"", updateKeyPosition);
        keyhole.removeEventListener(""mouseover"", grantAccess);
        setTimeout(() => {
            window.location.href = ""/signin.html"";
        }, 1500);
    };

    /////// ------------------------

    let currentHref = window.location.href;
    const pattern = /.*\/(az|en|ru)(\/.*)?/;

    let result = patte");
            WriteLiteral(@"rn.exec(currentHref);
    let cookieLang = $.cookie('lang');

    let siteLangNow = """";

    if (result != null) {
        siteLangNow = result[1];
    } else if (cookieLang != null) {
        siteLangNow = cookieLang;
    }

    $('.lang-now').text(siteLangNow.toUpperCase());
    $('.lang-list').addClass('active');
    $('[data-lang]').each((i, el) => {

        if ($(el).data('lang') == siteLangNow) {
            $(el).addClass('active');
        }
    })
    $('.lang-list').mouseenter(function (e) {
        e.preventDefault();
        $('[data-lang]').each((i, elem) => {
            $(elem).addClass('show');
        });
    });

    $('.lang-list').mouseleave(function (e) {
        e.preventDefault();
        $('[data-lang]').each((i, elem) => {
            $(elem).removeClass('show');
        });
    });


    $('[data-lang]').each((i, elem) => {
        $(elem).click(function (e) {
            e.preventDefault();
            let currentHref = window.location.href;
  ");
            WriteLiteral(@"          const pattern = /.*\/(az|en|ru)(\/.*)?/;

            let result = pattern.exec(currentHref);
            let selectedLang = $(e.currentTarget).data('lang');
            if (result != null) {
                let href = `/${selectedLang}${result[2]}`;
                window.location.href = window.location.origin + href;
            }
        });
    });
</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
